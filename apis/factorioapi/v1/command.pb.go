// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: apis/factorioapi/v1/command.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandRawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"` // The input for the command. For example, it will be formatted and executed with `/c game.player.zoom=0.1`.
}

func (x *CommandRawRequest) Reset() {
	*x = CommandRawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRawRequest) ProtoMessage() {}

func (x *CommandRawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRawRequest.ProtoReflect.Descriptor instead.
func (*CommandRawRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{0}
}

func (x *CommandRawRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

type CommandRawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"` // The output from the command.
}

func (x *CommandRawResponse) Reset() {
	*x = CommandRawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRawResponse) ProtoMessage() {}

func (x *CommandRawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRawResponse.ProtoReflect.Descriptor instead.
func (*CommandRawResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{1}
}

func (x *CommandRawResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type CommandMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // The message to send.
}

func (x *CommandMessageRequest) Reset() {
	*x = CommandMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMessageRequest) ProtoMessage() {}

func (x *CommandMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMessageRequest.ProtoReflect.Descriptor instead.
func (*CommandMessageRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{2}
}

func (x *CommandMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CommandMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandMessageResponse) Reset() {
	*x = CommandMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMessageResponse) ProtoMessage() {}

func (x *CommandMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMessageResponse.ProtoReflect.Descriptor instead.
func (*CommandMessageResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{3}
}

type CommandEvolutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandEvolutionRequest) Reset() {
	*x = CommandEvolutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandEvolutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandEvolutionRequest) ProtoMessage() {}

func (x *CommandEvolutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandEvolutionRequest.ProtoReflect.Descriptor instead.
func (*CommandEvolutionRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{4}
}

type CommandEvolutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvolutionFactor float64 `protobuf:"fixed64,1,opt,name=evolution_factor,json=evolutionFactor,proto3" json:"evolution_factor,omitempty"` // The current alien evolution factor.
	Time            float64 `protobuf:"fixed64,2,opt,name=time,proto3" json:"time,omitempty"`                                              // in percentage
	Pollution       float64 `protobuf:"fixed64,3,opt,name=pollution,proto3" json:"pollution,omitempty"`                                    // in percentage
	SpawnerKills    float64 `protobuf:"fixed64,4,opt,name=spawner_kills,json=spawnerKills,proto3" json:"spawner_kills,omitempty"`          // in percentage
}

func (x *CommandEvolutionResponse) Reset() {
	*x = CommandEvolutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandEvolutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandEvolutionResponse) ProtoMessage() {}

func (x *CommandEvolutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandEvolutionResponse.ProtoReflect.Descriptor instead.
func (*CommandEvolutionResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{5}
}

func (x *CommandEvolutionResponse) GetEvolutionFactor() float64 {
	if x != nil {
		return x.EvolutionFactor
	}
	return 0
}

func (x *CommandEvolutionResponse) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CommandEvolutionResponse) GetPollution() float64 {
	if x != nil {
		return x.Pollution
	}
	return 0
}

func (x *CommandEvolutionResponse) GetSpawnerKills() float64 {
	if x != nil {
		return x.SpawnerKills
	}
	return 0
}

type CommandTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandTimeRequest) Reset() {
	*x = CommandTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandTimeRequest) ProtoMessage() {}

func (x *CommandTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandTimeRequest.ProtoReflect.Descriptor instead.
func (*CommandTimeRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{6}
}

type CommandTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"` // Get info about how old the map is.
}

func (x *CommandTimeResponse) Reset() {
	*x = CommandTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandTimeResponse) ProtoMessage() {}

func (x *CommandTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandTimeResponse.ProtoReflect.Descriptor instead.
func (*CommandTimeResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{7}
}

func (x *CommandTimeResponse) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type CommandSeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandSeedRequest) Reset() {
	*x = CommandSeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandSeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandSeedRequest) ProtoMessage() {}

func (x *CommandSeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandSeedRequest.ProtoReflect.Descriptor instead.
func (*CommandSeedRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{8}
}

type CommandSeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed string `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"` // The map seed.
}

func (x *CommandSeedResponse) Reset() {
	*x = CommandSeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandSeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandSeedResponse) ProtoMessage() {}

func (x *CommandSeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandSeedResponse.ProtoReflect.Descriptor instead.
func (*CommandSeedResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{9}
}

func (x *CommandSeedResponse) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

type CommandVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandVersionRequest) Reset() {
	*x = CommandVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandVersionRequest) ProtoMessage() {}

func (x *CommandVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandVersionRequest.ProtoReflect.Descriptor instead.
func (*CommandVersionRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{10}
}

type CommandVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"` // The version of the current Factorio game server.
}

func (x *CommandVersionResponse) Reset() {
	*x = CommandVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandVersionResponse) ProtoMessage() {}

func (x *CommandVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandVersionResponse.ProtoReflect.Descriptor instead.
func (*CommandVersionResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{11}
}

func (x *CommandVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username of the admin.
	Online   bool   `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`    // Whether the admin is online.
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{12}
}

func (x *Player) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Player) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type CommandAdminsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandAdminsRequest) Reset() {
	*x = CommandAdminsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandAdminsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandAdminsRequest) ProtoMessage() {}

func (x *CommandAdminsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandAdminsRequest.ProtoReflect.Descriptor instead.
func (*CommandAdminsRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{13}
}

type CommandAdminsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admins []*Player `protobuf:"bytes,1,rep,name=admins,proto3" json:"admins,omitempty"` // The list of admins.
}

func (x *CommandAdminsResponse) Reset() {
	*x = CommandAdminsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandAdminsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandAdminsResponse) ProtoMessage() {}

func (x *CommandAdminsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandAdminsResponse.ProtoReflect.Descriptor instead.
func (*CommandAdminsResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{14}
}

func (x *CommandAdminsResponse) GetAdmins() []*Player {
	if x != nil {
		return x.Admins
	}
	return nil
}

type CommandBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to ban.
}

func (x *CommandBanRequest) Reset() {
	*x = CommandBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandBanRequest) ProtoMessage() {}

func (x *CommandBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandBanRequest.ProtoReflect.Descriptor instead.
func (*CommandBanRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{15}
}

func (x *CommandBanRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandBanResponse) Reset() {
	*x = CommandBanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandBanResponse) ProtoMessage() {}

func (x *CommandBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandBanResponse.ProtoReflect.Descriptor instead.
func (*CommandBanResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{16}
}

type CommandBansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandBansRequest) Reset() {
	*x = CommandBansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandBansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandBansRequest) ProtoMessage() {}

func (x *CommandBansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandBansRequest.ProtoReflect.Descriptor instead.
func (*CommandBansRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{17}
}

type CommandBansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bans []*Player `protobuf:"bytes,1,rep,name=bans,proto3" json:"bans,omitempty"` // The list of bans.
}

func (x *CommandBansResponse) Reset() {
	*x = CommandBansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandBansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandBansResponse) ProtoMessage() {}

func (x *CommandBansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandBansResponse.ProtoReflect.Descriptor instead.
func (*CommandBansResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{18}
}

func (x *CommandBansResponse) GetBans() []*Player {
	if x != nil {
		return x.Bans
	}
	return nil
}

type CommandDemoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to demote.
}

func (x *CommandDemoteRequest) Reset() {
	*x = CommandDemoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDemoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDemoteRequest) ProtoMessage() {}

func (x *CommandDemoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDemoteRequest.ProtoReflect.Descriptor instead.
func (*CommandDemoteRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{19}
}

func (x *CommandDemoteRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandDemoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandDemoteResponse) Reset() {
	*x = CommandDemoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDemoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDemoteResponse) ProtoMessage() {}

func (x *CommandDemoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDemoteResponse.ProtoReflect.Descriptor instead.
func (*CommandDemoteResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{20}
}

type CommandIgnoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to ignore.
}

func (x *CommandIgnoreRequest) Reset() {
	*x = CommandIgnoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandIgnoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandIgnoreRequest) ProtoMessage() {}

func (x *CommandIgnoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandIgnoreRequest.ProtoReflect.Descriptor instead.
func (*CommandIgnoreRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{21}
}

func (x *CommandIgnoreRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandIgnoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandIgnoreResponse) Reset() {
	*x = CommandIgnoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandIgnoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandIgnoreResponse) ProtoMessage() {}

func (x *CommandIgnoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandIgnoreResponse.ProtoReflect.Descriptor instead.
func (*CommandIgnoreResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{22}
}

type CommandKickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to kick.
	Reason   string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`     // The reason for the kick.
}

func (x *CommandKickRequest) Reset() {
	*x = CommandKickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandKickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandKickRequest) ProtoMessage() {}

func (x *CommandKickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandKickRequest.ProtoReflect.Descriptor instead.
func (*CommandKickRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{23}
}

func (x *CommandKickRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CommandKickRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CommandKickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandKickResponse) Reset() {
	*x = CommandKickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandKickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandKickResponse) ProtoMessage() {}

func (x *CommandKickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandKickResponse.ProtoReflect.Descriptor instead.
func (*CommandKickResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{24}
}

type CommandMuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to mute.
}

func (x *CommandMuteRequest) Reset() {
	*x = CommandMuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandMuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMuteRequest) ProtoMessage() {}

func (x *CommandMuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMuteRequest.ProtoReflect.Descriptor instead.
func (*CommandMuteRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{25}
}

func (x *CommandMuteRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandMuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandMuteResponse) Reset() {
	*x = CommandMuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandMuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMuteResponse) ProtoMessage() {}

func (x *CommandMuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMuteResponse.ProtoReflect.Descriptor instead.
func (*CommandMuteResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{26}
}

type CommandMutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandMutesRequest) Reset() {
	*x = CommandMutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandMutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMutesRequest) ProtoMessage() {}

func (x *CommandMutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMutesRequest.ProtoReflect.Descriptor instead.
func (*CommandMutesRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{27}
}

type CommandMutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutes []*Player `protobuf:"bytes,1,rep,name=mutes,proto3" json:"mutes,omitempty"` // The list of mutes.
}

func (x *CommandMutesResponse) Reset() {
	*x = CommandMutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandMutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMutesResponse) ProtoMessage() {}

func (x *CommandMutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMutesResponse.ProtoReflect.Descriptor instead.
func (*CommandMutesResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{28}
}

func (x *CommandMutesResponse) GetMutes() []*Player {
	if x != nil {
		return x.Mutes
	}
	return nil
}

type CommandPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandPlayersRequest) Reset() {
	*x = CommandPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandPlayersRequest) ProtoMessage() {}

func (x *CommandPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandPlayersRequest.ProtoReflect.Descriptor instead.
func (*CommandPlayersRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{29}
}

type CommandPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"` // The list of players.
}

func (x *CommandPlayersResponse) Reset() {
	*x = CommandPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandPlayersResponse) ProtoMessage() {}

func (x *CommandPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandPlayersResponse.ProtoReflect.Descriptor instead.
func (*CommandPlayersResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{30}
}

func (x *CommandPlayersResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type CommandPromoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to promote.
}

func (x *CommandPromoteRequest) Reset() {
	*x = CommandPromoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandPromoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandPromoteRequest) ProtoMessage() {}

func (x *CommandPromoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandPromoteRequest.ProtoReflect.Descriptor instead.
func (*CommandPromoteRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{31}
}

func (x *CommandPromoteRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandPromoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandPromoteResponse) Reset() {
	*x = CommandPromoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandPromoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandPromoteResponse) ProtoMessage() {}

func (x *CommandPromoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandPromoteResponse.ProtoReflect.Descriptor instead.
func (*CommandPromoteResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{32}
}

type CommandPurgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to purge.
}

func (x *CommandPurgeRequest) Reset() {
	*x = CommandPurgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandPurgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandPurgeRequest) ProtoMessage() {}

func (x *CommandPurgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandPurgeRequest.ProtoReflect.Descriptor instead.
func (*CommandPurgeRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{33}
}

func (x *CommandPurgeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandPurgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandPurgeResponse) Reset() {
	*x = CommandPurgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandPurgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandPurgeResponse) ProtoMessage() {}

func (x *CommandPurgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandPurgeResponse.ProtoReflect.Descriptor instead.
func (*CommandPurgeResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{34}
}

type CommandServerSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandServerSaveRequest) Reset() {
	*x = CommandServerSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandServerSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandServerSaveRequest) ProtoMessage() {}

func (x *CommandServerSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandServerSaveRequest.ProtoReflect.Descriptor instead.
func (*CommandServerSaveRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{35}
}

type CommandServerSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandServerSaveResponse) Reset() {
	*x = CommandServerSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandServerSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandServerSaveResponse) ProtoMessage() {}

func (x *CommandServerSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandServerSaveResponse.ProtoReflect.Descriptor instead.
func (*CommandServerSaveResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{36}
}

type CommandUnbanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to unban.
}

func (x *CommandUnbanRequest) Reset() {
	*x = CommandUnbanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandUnbanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandUnbanRequest) ProtoMessage() {}

func (x *CommandUnbanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandUnbanRequest.ProtoReflect.Descriptor instead.
func (*CommandUnbanRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{37}
}

func (x *CommandUnbanRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandUnbanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandUnbanResponse) Reset() {
	*x = CommandUnbanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandUnbanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandUnbanResponse) ProtoMessage() {}

func (x *CommandUnbanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandUnbanResponse.ProtoReflect.Descriptor instead.
func (*CommandUnbanResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{38}
}

type CommandUnignoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to unignore.
}

func (x *CommandUnignoreRequest) Reset() {
	*x = CommandUnignoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandUnignoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandUnignoreRequest) ProtoMessage() {}

func (x *CommandUnignoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandUnignoreRequest.ProtoReflect.Descriptor instead.
func (*CommandUnignoreRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{39}
}

func (x *CommandUnignoreRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandUnignoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandUnignoreResponse) Reset() {
	*x = CommandUnignoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandUnignoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandUnignoreResponse) ProtoMessage() {}

func (x *CommandUnignoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandUnignoreResponse.ProtoReflect.Descriptor instead.
func (*CommandUnignoreResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{40}
}

type CommandUnmuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to unmute.
}

func (x *CommandUnmuteRequest) Reset() {
	*x = CommandUnmuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandUnmuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandUnmuteRequest) ProtoMessage() {}

func (x *CommandUnmuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandUnmuteRequest.ProtoReflect.Descriptor instead.
func (*CommandUnmuteRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{41}
}

func (x *CommandUnmuteRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandUnmuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandUnmuteResponse) Reset() {
	*x = CommandUnmuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandUnmuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandUnmuteResponse) ProtoMessage() {}

func (x *CommandUnmuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandUnmuteResponse.ProtoReflect.Descriptor instead.
func (*CommandUnmuteResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{42}
}

type CommandWhisperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to whisper.
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`   // The message to whisper.
}

func (x *CommandWhisperRequest) Reset() {
	*x = CommandWhisperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhisperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhisperRequest) ProtoMessage() {}

func (x *CommandWhisperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhisperRequest.ProtoReflect.Descriptor instead.
func (*CommandWhisperRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{43}
}

func (x *CommandWhisperRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CommandWhisperRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CommandWhisperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandWhisperResponse) Reset() {
	*x = CommandWhisperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhisperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhisperResponse) ProtoMessage() {}

func (x *CommandWhisperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhisperResponse.ProtoReflect.Descriptor instead.
func (*CommandWhisperResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{44}
}

type CommandWhitelistAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to add to the whitelist.
}

func (x *CommandWhitelistAddRequest) Reset() {
	*x = CommandWhitelistAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhitelistAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhitelistAddRequest) ProtoMessage() {}

func (x *CommandWhitelistAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhitelistAddRequest.ProtoReflect.Descriptor instead.
func (*CommandWhitelistAddRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{45}
}

func (x *CommandWhitelistAddRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandWhitelistAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandWhitelistAddResponse) Reset() {
	*x = CommandWhitelistAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhitelistAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhitelistAddResponse) ProtoMessage() {}

func (x *CommandWhitelistAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhitelistAddResponse.ProtoReflect.Descriptor instead.
func (*CommandWhitelistAddResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{46}
}

type CommandWhitelistGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandWhitelistGetRequest) Reset() {
	*x = CommandWhitelistGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhitelistGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhitelistGetRequest) ProtoMessage() {}

func (x *CommandWhitelistGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhitelistGetRequest.ProtoReflect.Descriptor instead.
func (*CommandWhitelistGetRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{47}
}

type CommandWhitelistGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Whitelist []*Player `protobuf:"bytes,1,rep,name=whitelist,proto3" json:"whitelist,omitempty"` // The list of whitelist.
}

func (x *CommandWhitelistGetResponse) Reset() {
	*x = CommandWhitelistGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhitelistGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhitelistGetResponse) ProtoMessage() {}

func (x *CommandWhitelistGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhitelistGetResponse.ProtoReflect.Descriptor instead.
func (*CommandWhitelistGetResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{48}
}

func (x *CommandWhitelistGetResponse) GetWhitelist() []*Player {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

type CommandWhitelistRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // The username to remove from the whitelist.
}

func (x *CommandWhitelistRemoveRequest) Reset() {
	*x = CommandWhitelistRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhitelistRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhitelistRemoveRequest) ProtoMessage() {}

func (x *CommandWhitelistRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhitelistRemoveRequest.ProtoReflect.Descriptor instead.
func (*CommandWhitelistRemoveRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{49}
}

func (x *CommandWhitelistRemoveRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandWhitelistRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandWhitelistRemoveResponse) Reset() {
	*x = CommandWhitelistRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhitelistRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhitelistRemoveResponse) ProtoMessage() {}

func (x *CommandWhitelistRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhitelistRemoveResponse.ProtoReflect.Descriptor instead.
func (*CommandWhitelistRemoveResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{50}
}

type CommandWhitelistClearRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandWhitelistClearRequest) Reset() {
	*x = CommandWhitelistClearRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhitelistClearRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhitelistClearRequest) ProtoMessage() {}

func (x *CommandWhitelistClearRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhitelistClearRequest.ProtoReflect.Descriptor instead.
func (*CommandWhitelistClearRequest) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{51}
}

type CommandWhitelistClearResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandWhitelistClearResponse) Reset() {
	*x = CommandWhitelistClearResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_factorioapi_v1_command_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandWhitelistClearResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandWhitelistClearResponse) ProtoMessage() {}

func (x *CommandWhitelistClearResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_factorioapi_v1_command_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandWhitelistClearResponse.ProtoReflect.Descriptor instead.
func (*CommandWhitelistClearResponse) Descriptor() ([]byte, []int) {
	return file_apis_factorioapi_v1_command_proto_rawDescGZIP(), []int{52}
}

var File_apis_factorioapi_v1_command_proto protoreflect.FileDescriptor

var file_apis_factorioapi_v1_command_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x4a,
	0x19, 0x22, 0x2f, 0x63, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x7a, 0x6f, 0x6f, 0x6d, 0x3d, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x22, 0x37, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x4f,
	0x6b, 0x22, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3f, 0x0a, 0x15, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xc1, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x76, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x10, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x30, 0x2e,
	0x31, 0x52, 0x0f, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x42, 0x07, 0x92, 0x41, 0x04, 0x4a, 0x02, 0x31, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x42, 0x07, 0x92, 0x41, 0x04, 0x4a, 0x02, 0x31, 0x30, 0x52, 0x09, 0x70, 0x6f, 0x6c,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0d, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x07, 0x92,
	0x41, 0x04, 0x4a, 0x02, 0x31, 0x30, 0x52, 0x0c, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x4b,
	0x69, 0x6c, 0x6c, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x13, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x42,
	0x07, 0x92, 0x41, 0x04, 0x4a, 0x02, 0x31, 0x30, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x14,
	0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73,
	0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x4a, 0x08,
	0x22, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x22, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x22, 0x17,
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x31, 0x2e, 0x31, 0x2e, 0x30, 0x22,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x06, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b,
	0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x09, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a,
	0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d,
	0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x22, 0x42,
	0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b,
	0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59,
	0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77,
	0x77, 0x77, 0x22, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x73, 0x22, 0x45, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d,
	0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d,
	0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x12, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f,
	0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0x92, 0x41, 0x0a, 0x4a, 0x08, 0x22, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x12,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f,
	0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x5c, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d,
	0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x73, 0x22, 0x17, 0x0a,
	0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77,
	0x22, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x46, 0x0a, 0x15, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b,
	0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x13,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b,
	0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x75, 0x72,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e,
	0x62, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41,
	0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x47, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77,
	0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77,
	0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x22, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4b, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77,
	0x77, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x1b,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x1b, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c, 0x22,
	0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x09, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x4a, 0x0c,
	0x22, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77, 0x77, 0x22, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfc, 0x2c, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe7, 0x01, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x12, 0x26, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x01, 0x92,
	0x41, 0x55, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x24, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x4c, 0x75, 0x61, 0x20, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x20, 0x28, 0x69, 0x66, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x29,
	0x2e, 0x1a, 0x24, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x4c, 0x75,
	0x61, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x28, 0x69, 0x66, 0x20, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x29, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a,
	0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2f, 0x72, 0x61, 0x77, 0x12, 0xea, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x7f, 0x92, 0x41, 0x49, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
	0x12, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x20, 0x61, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x20, 0x74, 0x6f, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e,
	0x1a, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x20, 0x61, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x20, 0x74, 0x6f, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x88, 0x02, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45,
	0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x92, 0x41, 0x61, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x47, 0x65, 0x74, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x20, 0x61,
	0x62, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x65,
	0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x1a, 0x2a, 0x47, 0x65, 0x74, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x65, 0x76, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xc1,
	0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x64, 0x12, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5f, 0x92, 0x41, 0x2f, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12,
	0x11, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x70, 0x20, 0x73, 0x65, 0x65,
	0x64, 0x2e, 0x1a, 0x11, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x70, 0x20,
	0x73, 0x65, 0x65, 0x64, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x73, 0x65,
	0x65, 0x64, 0x12, 0xd3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x92, 0x41, 0x41, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x1a,
	0x1a, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x20, 0x67, 0x61, 0x6d, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x94, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa8, 0x01, 0x92, 0x41, 0x75, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x12, 0x34, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x20, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x20, 0x67, 0x61, 0x6d,
	0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x1a, 0x34, 0x47, 0x65, 0x74, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0xd5, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x92, 0x41, 0x3b, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x2e, 0x1a,
	0x17, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66,
	0x20, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0xb8, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x92, 0x41, 0x27, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x0d, 0x42, 0x61, 0x6e, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x1a, 0x0d, 0x42, 0x61, 0x6e, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x62,
	0x61, 0x6e, 0x12, 0xc9, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x61,
	0x6e, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x92, 0x41, 0x37, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x12, 0x15, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73,
	0x74, 0x20, 0x6f, 0x66, 0x20, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x1a, 0x15, 0x47, 0x65, 0x74, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x62, 0x61, 0x6e, 0x73,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x62, 0x61, 0x6e, 0x73, 0x12, 0xca,
	0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x92, 0x41, 0x2d, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x20, 0x61, 0x20,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x1a, 0x10, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x20,
	0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a,
	0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x64, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0xca, 0x01, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x92, 0x41, 0x2d, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x12, 0x10, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x1a, 0x10, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x20, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22,
	0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0xbe, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4b, 0x69, 0x63, 0x6b, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4b,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x92, 0x41, 0x29,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x4b, 0x69, 0x63, 0x6b, 0x20,
	0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x1a, 0x0e, 0x4b, 0x69, 0x63, 0x6b, 0x20,
	0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a,
	0x01, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x6b, 0x69, 0x63, 0x6b, 0x12, 0xbe, 0x01, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x92, 0x41,
	0x29, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x4d, 0x75, 0x74, 0x65,
	0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x1a, 0x0e, 0x4d, 0x75, 0x74, 0x65,
	0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a,
	0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x6d, 0x75, 0x74, 0x65, 0x12, 0xcf, 0x01, 0x0a, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x6a, 0x92, 0x41, 0x39, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x16,
	0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20,
	0x6d, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x1a, 0x16, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x6d, 0x75, 0x74, 0x65, 0x73, 0x12, 0xdb, 0x01, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x92, 0x41, 0x3d, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e,
	0x1a, 0x18, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f,
	0x66, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a,
	0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0xd0, 0x01, 0x0a, 0x0e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x2a, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x92, 0x41, 0x2f, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x12, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x20, 0x61, 0x20,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x1a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d,
	0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0xc4, 0x01,
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x67, 0x65, 0x12, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5f, 0x92, 0x41, 0x2b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x12, 0x0f, 0x50, 0x75, 0x72, 0x67, 0x65, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x1a, 0x0f, 0x50, 0x75, 0x72, 0x67, 0x65, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x70,
	0x75, 0x72, 0x67, 0x65, 0x12, 0xd7, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x92, 0x41, 0x29, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x1a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a,
	0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2d, 0x73, 0x61, 0x76, 0x65, 0x12, 0xc4,
	0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x12,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x62,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x92, 0x41, 0x2b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x12, 0x0f, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x1a, 0x0f, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f,
	0x75, 0x6e, 0x62, 0x61, 0x6e, 0x12, 0xd6, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x92, 0x41, 0x31, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x12, 0x12, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x20, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x1a, 0x12, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e,
	0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x75, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0xca,
	0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65,
	0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e,
	0x6d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x92, 0x41, 0x2d, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x20, 0x61, 0x20,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x1a, 0x10, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x20,
	0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a,
	0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x75, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x12, 0xd2, 0x01, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x12, 0x2a,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x73,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x92, 0x41, 0x31, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x20, 0x61,
	0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x1a, 0x12, 0x57, 0x68, 0x69, 0x73, 0x70,
	0x65, 0x72, 0x20, 0x61, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72,
	0x12, 0x80, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x92, 0x41,
	0x49, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x41, 0x64, 0x64, 0x20,
	0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x1a, 0x1e, 0x41, 0x64, 0x64, 0x20,
	0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33,
	0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x2f,
	0x61, 0x64, 0x64, 0x12, 0xf0, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x12, 0x2f, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76,
	0x92, 0x41, 0x41, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x47, 0x65,
	0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x1a, 0x1a, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8f, 0x02, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x92, 0x41, 0x53,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x1a, 0x23,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x20, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20,
	0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x32, 0x2a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xed, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x92, 0x41, 0x35, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x1a, 0x14, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x2a, 0x2a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x6b, 0x6f, 0x6d, 0x65, 0x6f, 0x77, 0x77,
	0x77, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f, 0x2d, 0x72, 0x63, 0x6f, 0x6e, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x6f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apis_factorioapi_v1_command_proto_rawDescOnce sync.Once
	file_apis_factorioapi_v1_command_proto_rawDescData = file_apis_factorioapi_v1_command_proto_rawDesc
)

func file_apis_factorioapi_v1_command_proto_rawDescGZIP() []byte {
	file_apis_factorioapi_v1_command_proto_rawDescOnce.Do(func() {
		file_apis_factorioapi_v1_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_factorioapi_v1_command_proto_rawDescData)
	})
	return file_apis_factorioapi_v1_command_proto_rawDescData
}

var file_apis_factorioapi_v1_command_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_apis_factorioapi_v1_command_proto_goTypes = []interface{}{
	(*CommandRawRequest)(nil),              // 0: apis.factorioapi.v1.CommandRawRequest
	(*CommandRawResponse)(nil),             // 1: apis.factorioapi.v1.CommandRawResponse
	(*CommandMessageRequest)(nil),          // 2: apis.factorioapi.v1.CommandMessageRequest
	(*CommandMessageResponse)(nil),         // 3: apis.factorioapi.v1.CommandMessageResponse
	(*CommandEvolutionRequest)(nil),        // 4: apis.factorioapi.v1.CommandEvolutionRequest
	(*CommandEvolutionResponse)(nil),       // 5: apis.factorioapi.v1.CommandEvolutionResponse
	(*CommandTimeRequest)(nil),             // 6: apis.factorioapi.v1.CommandTimeRequest
	(*CommandTimeResponse)(nil),            // 7: apis.factorioapi.v1.CommandTimeResponse
	(*CommandSeedRequest)(nil),             // 8: apis.factorioapi.v1.CommandSeedRequest
	(*CommandSeedResponse)(nil),            // 9: apis.factorioapi.v1.CommandSeedResponse
	(*CommandVersionRequest)(nil),          // 10: apis.factorioapi.v1.CommandVersionRequest
	(*CommandVersionResponse)(nil),         // 11: apis.factorioapi.v1.CommandVersionResponse
	(*Player)(nil),                         // 12: apis.factorioapi.v1.Player
	(*CommandAdminsRequest)(nil),           // 13: apis.factorioapi.v1.CommandAdminsRequest
	(*CommandAdminsResponse)(nil),          // 14: apis.factorioapi.v1.CommandAdminsResponse
	(*CommandBanRequest)(nil),              // 15: apis.factorioapi.v1.CommandBanRequest
	(*CommandBanResponse)(nil),             // 16: apis.factorioapi.v1.CommandBanResponse
	(*CommandBansRequest)(nil),             // 17: apis.factorioapi.v1.CommandBansRequest
	(*CommandBansResponse)(nil),            // 18: apis.factorioapi.v1.CommandBansResponse
	(*CommandDemoteRequest)(nil),           // 19: apis.factorioapi.v1.CommandDemoteRequest
	(*CommandDemoteResponse)(nil),          // 20: apis.factorioapi.v1.CommandDemoteResponse
	(*CommandIgnoreRequest)(nil),           // 21: apis.factorioapi.v1.CommandIgnoreRequest
	(*CommandIgnoreResponse)(nil),          // 22: apis.factorioapi.v1.CommandIgnoreResponse
	(*CommandKickRequest)(nil),             // 23: apis.factorioapi.v1.CommandKickRequest
	(*CommandKickResponse)(nil),            // 24: apis.factorioapi.v1.CommandKickResponse
	(*CommandMuteRequest)(nil),             // 25: apis.factorioapi.v1.CommandMuteRequest
	(*CommandMuteResponse)(nil),            // 26: apis.factorioapi.v1.CommandMuteResponse
	(*CommandMutesRequest)(nil),            // 27: apis.factorioapi.v1.CommandMutesRequest
	(*CommandMutesResponse)(nil),           // 28: apis.factorioapi.v1.CommandMutesResponse
	(*CommandPlayersRequest)(nil),          // 29: apis.factorioapi.v1.CommandPlayersRequest
	(*CommandPlayersResponse)(nil),         // 30: apis.factorioapi.v1.CommandPlayersResponse
	(*CommandPromoteRequest)(nil),          // 31: apis.factorioapi.v1.CommandPromoteRequest
	(*CommandPromoteResponse)(nil),         // 32: apis.factorioapi.v1.CommandPromoteResponse
	(*CommandPurgeRequest)(nil),            // 33: apis.factorioapi.v1.CommandPurgeRequest
	(*CommandPurgeResponse)(nil),           // 34: apis.factorioapi.v1.CommandPurgeResponse
	(*CommandServerSaveRequest)(nil),       // 35: apis.factorioapi.v1.CommandServerSaveRequest
	(*CommandServerSaveResponse)(nil),      // 36: apis.factorioapi.v1.CommandServerSaveResponse
	(*CommandUnbanRequest)(nil),            // 37: apis.factorioapi.v1.CommandUnbanRequest
	(*CommandUnbanResponse)(nil),           // 38: apis.factorioapi.v1.CommandUnbanResponse
	(*CommandUnignoreRequest)(nil),         // 39: apis.factorioapi.v1.CommandUnignoreRequest
	(*CommandUnignoreResponse)(nil),        // 40: apis.factorioapi.v1.CommandUnignoreResponse
	(*CommandUnmuteRequest)(nil),           // 41: apis.factorioapi.v1.CommandUnmuteRequest
	(*CommandUnmuteResponse)(nil),          // 42: apis.factorioapi.v1.CommandUnmuteResponse
	(*CommandWhisperRequest)(nil),          // 43: apis.factorioapi.v1.CommandWhisperRequest
	(*CommandWhisperResponse)(nil),         // 44: apis.factorioapi.v1.CommandWhisperResponse
	(*CommandWhitelistAddRequest)(nil),     // 45: apis.factorioapi.v1.CommandWhitelistAddRequest
	(*CommandWhitelistAddResponse)(nil),    // 46: apis.factorioapi.v1.CommandWhitelistAddResponse
	(*CommandWhitelistGetRequest)(nil),     // 47: apis.factorioapi.v1.CommandWhitelistGetRequest
	(*CommandWhitelistGetResponse)(nil),    // 48: apis.factorioapi.v1.CommandWhitelistGetResponse
	(*CommandWhitelistRemoveRequest)(nil),  // 49: apis.factorioapi.v1.CommandWhitelistRemoveRequest
	(*CommandWhitelistRemoveResponse)(nil), // 50: apis.factorioapi.v1.CommandWhitelistRemoveResponse
	(*CommandWhitelistClearRequest)(nil),   // 51: apis.factorioapi.v1.CommandWhitelistClearRequest
	(*CommandWhitelistClearResponse)(nil),  // 52: apis.factorioapi.v1.CommandWhitelistClearResponse
}
var file_apis_factorioapi_v1_command_proto_depIdxs = []int32{
	12, // 0: apis.factorioapi.v1.CommandAdminsResponse.admins:type_name -> apis.factorioapi.v1.Player
	12, // 1: apis.factorioapi.v1.CommandBansResponse.bans:type_name -> apis.factorioapi.v1.Player
	12, // 2: apis.factorioapi.v1.CommandMutesResponse.mutes:type_name -> apis.factorioapi.v1.Player
	12, // 3: apis.factorioapi.v1.CommandPlayersResponse.players:type_name -> apis.factorioapi.v1.Player
	12, // 4: apis.factorioapi.v1.CommandWhitelistGetResponse.whitelist:type_name -> apis.factorioapi.v1.Player
	0,  // 5: apis.factorioapi.v1.ConsoleService.CommandRaw:input_type -> apis.factorioapi.v1.CommandRawRequest
	2,  // 6: apis.factorioapi.v1.ConsoleService.CommandMessage:input_type -> apis.factorioapi.v1.CommandMessageRequest
	4,  // 7: apis.factorioapi.v1.ConsoleService.CommandEvolution:input_type -> apis.factorioapi.v1.CommandEvolutionRequest
	8,  // 8: apis.factorioapi.v1.ConsoleService.CommandSeed:input_type -> apis.factorioapi.v1.CommandSeedRequest
	6,  // 9: apis.factorioapi.v1.ConsoleService.CommandTime:input_type -> apis.factorioapi.v1.CommandTimeRequest
	10, // 10: apis.factorioapi.v1.ConsoleService.CommandVersion:input_type -> apis.factorioapi.v1.CommandVersionRequest
	13, // 11: apis.factorioapi.v1.ConsoleService.CommandAdmins:input_type -> apis.factorioapi.v1.CommandAdminsRequest
	15, // 12: apis.factorioapi.v1.ConsoleService.CommandBan:input_type -> apis.factorioapi.v1.CommandBanRequest
	17, // 13: apis.factorioapi.v1.ConsoleService.CommandBans:input_type -> apis.factorioapi.v1.CommandBansRequest
	19, // 14: apis.factorioapi.v1.ConsoleService.CommandDemote:input_type -> apis.factorioapi.v1.CommandDemoteRequest
	21, // 15: apis.factorioapi.v1.ConsoleService.CommandIgnore:input_type -> apis.factorioapi.v1.CommandIgnoreRequest
	23, // 16: apis.factorioapi.v1.ConsoleService.CommandKick:input_type -> apis.factorioapi.v1.CommandKickRequest
	25, // 17: apis.factorioapi.v1.ConsoleService.CommandMute:input_type -> apis.factorioapi.v1.CommandMuteRequest
	27, // 18: apis.factorioapi.v1.ConsoleService.CommandMutes:input_type -> apis.factorioapi.v1.CommandMutesRequest
	29, // 19: apis.factorioapi.v1.ConsoleService.CommandPlayers:input_type -> apis.factorioapi.v1.CommandPlayersRequest
	31, // 20: apis.factorioapi.v1.ConsoleService.CommandPromote:input_type -> apis.factorioapi.v1.CommandPromoteRequest
	33, // 21: apis.factorioapi.v1.ConsoleService.CommandPurge:input_type -> apis.factorioapi.v1.CommandPurgeRequest
	35, // 22: apis.factorioapi.v1.ConsoleService.CommandServerSave:input_type -> apis.factorioapi.v1.CommandServerSaveRequest
	37, // 23: apis.factorioapi.v1.ConsoleService.CommandUnban:input_type -> apis.factorioapi.v1.CommandUnbanRequest
	39, // 24: apis.factorioapi.v1.ConsoleService.CommandUnignore:input_type -> apis.factorioapi.v1.CommandUnignoreRequest
	41, // 25: apis.factorioapi.v1.ConsoleService.CommandUnmute:input_type -> apis.factorioapi.v1.CommandUnmuteRequest
	43, // 26: apis.factorioapi.v1.ConsoleService.CommandWhisper:input_type -> apis.factorioapi.v1.CommandWhisperRequest
	45, // 27: apis.factorioapi.v1.ConsoleService.CommandWhitelistAdd:input_type -> apis.factorioapi.v1.CommandWhitelistAddRequest
	47, // 28: apis.factorioapi.v1.ConsoleService.CommandWhitelistGet:input_type -> apis.factorioapi.v1.CommandWhitelistGetRequest
	49, // 29: apis.factorioapi.v1.ConsoleService.CommandWhitelistRemove:input_type -> apis.factorioapi.v1.CommandWhitelistRemoveRequest
	51, // 30: apis.factorioapi.v1.ConsoleService.CommandWhitelistClear:input_type -> apis.factorioapi.v1.CommandWhitelistClearRequest
	1,  // 31: apis.factorioapi.v1.ConsoleService.CommandRaw:output_type -> apis.factorioapi.v1.CommandRawResponse
	3,  // 32: apis.factorioapi.v1.ConsoleService.CommandMessage:output_type -> apis.factorioapi.v1.CommandMessageResponse
	5,  // 33: apis.factorioapi.v1.ConsoleService.CommandEvolution:output_type -> apis.factorioapi.v1.CommandEvolutionResponse
	9,  // 34: apis.factorioapi.v1.ConsoleService.CommandSeed:output_type -> apis.factorioapi.v1.CommandSeedResponse
	7,  // 35: apis.factorioapi.v1.ConsoleService.CommandTime:output_type -> apis.factorioapi.v1.CommandTimeResponse
	11, // 36: apis.factorioapi.v1.ConsoleService.CommandVersion:output_type -> apis.factorioapi.v1.CommandVersionResponse
	14, // 37: apis.factorioapi.v1.ConsoleService.CommandAdmins:output_type -> apis.factorioapi.v1.CommandAdminsResponse
	16, // 38: apis.factorioapi.v1.ConsoleService.CommandBan:output_type -> apis.factorioapi.v1.CommandBanResponse
	18, // 39: apis.factorioapi.v1.ConsoleService.CommandBans:output_type -> apis.factorioapi.v1.CommandBansResponse
	20, // 40: apis.factorioapi.v1.ConsoleService.CommandDemote:output_type -> apis.factorioapi.v1.CommandDemoteResponse
	22, // 41: apis.factorioapi.v1.ConsoleService.CommandIgnore:output_type -> apis.factorioapi.v1.CommandIgnoreResponse
	24, // 42: apis.factorioapi.v1.ConsoleService.CommandKick:output_type -> apis.factorioapi.v1.CommandKickResponse
	26, // 43: apis.factorioapi.v1.ConsoleService.CommandMute:output_type -> apis.factorioapi.v1.CommandMuteResponse
	28, // 44: apis.factorioapi.v1.ConsoleService.CommandMutes:output_type -> apis.factorioapi.v1.CommandMutesResponse
	30, // 45: apis.factorioapi.v1.ConsoleService.CommandPlayers:output_type -> apis.factorioapi.v1.CommandPlayersResponse
	32, // 46: apis.factorioapi.v1.ConsoleService.CommandPromote:output_type -> apis.factorioapi.v1.CommandPromoteResponse
	34, // 47: apis.factorioapi.v1.ConsoleService.CommandPurge:output_type -> apis.factorioapi.v1.CommandPurgeResponse
	36, // 48: apis.factorioapi.v1.ConsoleService.CommandServerSave:output_type -> apis.factorioapi.v1.CommandServerSaveResponse
	38, // 49: apis.factorioapi.v1.ConsoleService.CommandUnban:output_type -> apis.factorioapi.v1.CommandUnbanResponse
	40, // 50: apis.factorioapi.v1.ConsoleService.CommandUnignore:output_type -> apis.factorioapi.v1.CommandUnignoreResponse
	42, // 51: apis.factorioapi.v1.ConsoleService.CommandUnmute:output_type -> apis.factorioapi.v1.CommandUnmuteResponse
	44, // 52: apis.factorioapi.v1.ConsoleService.CommandWhisper:output_type -> apis.factorioapi.v1.CommandWhisperResponse
	46, // 53: apis.factorioapi.v1.ConsoleService.CommandWhitelistAdd:output_type -> apis.factorioapi.v1.CommandWhitelistAddResponse
	48, // 54: apis.factorioapi.v1.ConsoleService.CommandWhitelistGet:output_type -> apis.factorioapi.v1.CommandWhitelistGetResponse
	50, // 55: apis.factorioapi.v1.ConsoleService.CommandWhitelistRemove:output_type -> apis.factorioapi.v1.CommandWhitelistRemoveResponse
	52, // 56: apis.factorioapi.v1.ConsoleService.CommandWhitelistClear:output_type -> apis.factorioapi.v1.CommandWhitelistClearResponse
	31, // [31:57] is the sub-list for method output_type
	5,  // [5:31] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_apis_factorioapi_v1_command_proto_init() }
func file_apis_factorioapi_v1_command_proto_init() {
	if File_apis_factorioapi_v1_command_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apis_factorioapi_v1_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandEvolutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandEvolutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandSeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandSeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandAdminsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandAdminsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandBanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandBansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandBansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDemoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDemoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandIgnoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandIgnoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandKickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandKickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandMuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandMuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandMutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandMutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandPromoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandPromoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandPurgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandPurgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandServerSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandServerSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandUnbanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandUnbanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandUnignoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandUnignoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandUnmuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandUnmuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhisperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhisperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhitelistAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhitelistAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhitelistGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhitelistGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhitelistRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhitelistRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhitelistClearRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_factorioapi_v1_command_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandWhitelistClearResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_factorioapi_v1_command_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_factorioapi_v1_command_proto_goTypes,
		DependencyIndexes: file_apis_factorioapi_v1_command_proto_depIdxs,
		MessageInfos:      file_apis_factorioapi_v1_command_proto_msgTypes,
	}.Build()
	File_apis_factorioapi_v1_command_proto = out.File
	file_apis_factorioapi_v1_command_proto_rawDesc = nil
	file_apis_factorioapi_v1_command_proto_goTypes = nil
	file_apis_factorioapi_v1_command_proto_depIdxs = nil
}
